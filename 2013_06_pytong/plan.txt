Sécuriser ses données
#####################

On n'en parlera pas
===================

- sécurisation d'un serveur physique
- sécurisation d'un serveur web
- protection contre CSRF, XSS, SQL Injection, NSA

On va parler de
===============

- la sécurisation de son ordinateur

Le minimum
==========

- mot de passe (rappel: http://xkcd.com/936/)
- verouillage de la session lors des AFK
- passphrase sur sa clé SSH
- aucune info critique dans le code source

Mais attention
==============

- pas de wifi public
- pas d'envoi de données par mail
- pas d'envoi de mots de passe / info critique
- pas de mot de passe partagé
- procédures suivies par TOUT le monde

PEBCAK, mais pas que
====================

- vol
- retour en garantie

Mais alors, on est tous foutus ?
================================

Solution : chiffrage du disque

Trop compliqué ?
================

Une autre solution : ne pas avoir de données critiques

La solution pragmatique
=======================

- connexion aux serveurs en ssh par clé
- pas de connexion aux serveurs
- utilisation de scripts (hint: http://django-runcommands.rtfd.org/)
- utiliser son propre "paste" (http://www.0bin.net/)

La solution pragmatique (DB)
============================

- pas de dump de la DB de production
- ou alors anonymisé (user, profile)
- utiliser un script de génération de données de test
- utiliser http://factoryboy.rtfd.org

L'open-source, c'est le bien
============================

Force à faire les choses bien, proprement.
